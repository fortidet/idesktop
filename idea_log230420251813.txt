C:\Java\jdk-19\bin\java.exe -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:C:\prg\ideaIC-2022.3.3.win\lib\idea_rt.jar=54042:C:\prg\ideaIC-2022.3.3.win\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath C:\Users\csc-sp-0000456\.m2\repository\org\junit\platform\junit-platform-launcher\1.11.0\junit-platform-launcher-1.11.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\junit\platform\junit-platform-engine\1.11.0\junit-platform-engine-1.11.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.0\junit-jupiter-engine-5.11.0.jar;C:\prg\ideaIC-2022.3.3.win\lib\idea_rt.jar;C:\prg\ideaIC-2022.3.3.win\plugins\junit\lib\junit5-rt.jar;C:\prg\ideaIC-2022.3.3.win\plugins\junit\lib\junit-rt.jar;C:\prg\IdeaProjects\csc.sap\target\test-classes;C:\prg\IdeaProjects\csc.sap\target\classes;C:\Users\csc-sp-0000456\.m2\repository\com\github\lanit-exp\FlaNium.WinAPI\2.3.0\FlaNium.WinAPI-2.3.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\4.10.0\selenium-remote-driver-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\com\google\auto\service\auto-service-annotations\1.0.1\auto-service-annotations-1.0.1.jar;C:\Users\csc-sp-0000456\.m2\repository\com\google\auto\service\auto-service\1.0.1\auto-service-1.0.1.jar;C:\Users\csc-sp-0000456\.m2\repository\com\google\auto\auto-common\1.2\auto-common-1.2.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-buffer\4.1.92.Final\netty-buffer-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-codec-http\4.1.92.Final\netty-codec-http-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-codec\4.1.92.Final\netty-codec-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-handler\4.1.92.Final\netty-handler-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-common\4.1.92.Final\netty-common-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.92.Final\netty-transport-classes-epoll-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.92.Final\netty-transport-classes-kqueue-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-transport-native-epoll\4.1.92.Final\netty-transport-native-epoll-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.92.Final\netty-transport-native-kqueue-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.92.Final\netty-transport-native-unix-common-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-transport\4.1.92.Final\netty-transport-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-resolver\4.1.92.Final\netty-resolver-4.1.92.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-api\1.26.0\opentelemetry-api-1.26.0.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-context\1.26.0\opentelemetry-context-1.26.0.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-exporter-logging\1.26.0\opentelemetry-exporter-logging-1.26.0.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-sdk-metrics\1.26.0\opentelemetry-sdk-metrics-1.26.0.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-extension-incubator\1.26.0-alpha\opentelemetry-extension-incubator-1.26.0-alpha.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-sdk-logs\1.26.0-alpha\opentelemetry-sdk-logs-1.26.0-alpha.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-api-logs\1.26.0-alpha\opentelemetry-api-logs-1.26.0-alpha.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-api-events\1.26.0-alpha\opentelemetry-api-events-1.26.0-alpha.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-sdk-common\1.26.0\opentelemetry-sdk-common-1.26.0.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-sdk-extension-autoconfigure-spi\1.26.0\opentelemetry-sdk-extension-autoconfigure-spi-1.26.0.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-sdk-extension-autoconfigure\1.26.0-alpha\opentelemetry-sdk-extension-autoconfigure-1.26.0-alpha.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-sdk-trace\1.26.0\opentelemetry-sdk-trace-1.26.0.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-sdk\1.26.0\opentelemetry-sdk-1.26.0.jar;C:\Users\csc-sp-0000456\.m2\repository\io\opentelemetry\opentelemetry-semconv\1.26.0-alpha\opentelemetry-semconv-1.26.0-alpha.jar;C:\Users\csc-sp-0000456\.m2\repository\org\asynchttpclient\async-http-client\2.12.3\async-http-client-2.12.3.jar;C:\Users\csc-sp-0000456\.m2\repository\org\asynchttpclient\async-http-client-netty-utils\2.12.3\async-http-client-netty-utils-2.12.3.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-codec-socks\4.1.60.Final\netty-codec-socks-4.1.60.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-handler-proxy\4.1.60.Final\netty-handler-proxy-4.1.60.Final.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-transport-native-epoll\4.1.60.Final\netty-transport-native-epoll-4.1.60.Final-linux-x86_64.jar;C:\Users\csc-sp-0000456\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.60.Final\netty-transport-native-kqueue-4.1.60.Final-osx-x86_64.jar;C:\Users\csc-sp-0000456\.m2\repository\org\reactivestreams\reactive-streams\1.0.3\reactive-streams-1.0.3.jar;C:\Users\csc-sp-0000456\.m2\repository\com\typesafe\netty\netty-reactive-streams\2.0.4\netty-reactive-streams-2.0.4.jar;C:\Users\csc-sp-0000456\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\csc-sp-0000456\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-http\4.10.0\selenium-http-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\dev\failsafe\failsafe\3.3.1\failsafe-3.3.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-json\4.10.0\selenium-json-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-manager\4.10.0\selenium-manager-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-api\4.10.0\selenium-api-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\3.4.1\maven-javadoc-plugin-3.4.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\maven-core\3.2.5\maven-core-3.2.5.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\maven-settings-builder\3.2.5\maven-settings-builder-3.2.5.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\maven-repository-metadata\3.2.5\maven-repository-metadata-3.2.5.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\maven-model-builder\3.2.5\maven-model-builder-3.2.5.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\maven-aether-provider\3.2.5\maven-aether-provider-3.2.5.jar;C:\Users\csc-sp-0000456\.m2\repository\org\eclipse\aether\aether-spi\1.0.0.v20140518\aether-spi-1.0.0.v20140518.jar;C:\Users\csc-sp-0000456\.m2\repository\org\eclipse\aether\aether-impl\1.0.0.v20140518\aether-impl-1.0.0.v20140518.jar;C:\Users\csc-sp-0000456\.m2\repository\org\eclipse\aether\aether-api\1.0.0.v20140518\aether-api-1.0.0.v20140518.jar;C:\Users\csc-sp-0000456\.m2\repository\org\eclipse\aether\aether-util\1.0.0.v20140518\aether-util-1.0.0.v20140518.jar;C:\Users\csc-sp-0000456\.m2\repository\org\eclipse\sisu\org.eclipse.sisu.plexus\0.3.0.M1\org.eclipse.sisu.plexus-0.3.0.M1.jar;C:\Users\csc-sp-0000456\.m2\repository\javax\enterprise\cdi-api\1.0\cdi-api-1.0.jar;C:\Users\csc-sp-0000456\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\eclipse\sisu\org.eclipse.sisu.inject\0.3.0.M1\org.eclipse.sisu.inject-0.3.0.M1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\sonatype\sisu\sisu-guice\3.2.3\sisu-guice-3.2.3-no_aop.jar;C:\Users\csc-sp-0000456\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.21\plexus-interpolation-1.21.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.5.2\plexus-classworlds-2.5.2.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\csc-sp-0000456\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\csc-sp-0000456\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\maven-model\3.2.5\maven-model-3.2.5.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\maven-settings\3.2.5\maven-settings-3.2.5.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\maven-plugin-api\3.2.5\maven-plugin-api-3.2.5.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\maven-artifact\3.2.5\maven-artifact-3.2.5.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.1.1\maven-reporting-api-3.1.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\maven-archiver\3.6.0\maven-archiver-3.6.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-io\3.4.0\plexus-io-3.4.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-archiver\4.4.0\plexus-archiver-4.4.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\csc-sp-0000456\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\csc-sp-0000456\.m2\repository\org\tukaani\xz\1.9\xz-1.9.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\shared\maven-invoker\3.1.0\maven-invoker-3.1.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.3.3\maven-shared-utils-3.3.3.jar;C:\Users\csc-sp-0000456\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\3.1.1\maven-common-artifact-filters-3.1.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\csc-sp-0000456\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\csc-sp-0000456\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\shared\maven-artifact-transfer\0.13.1\maven-artifact-transfer-0.13.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.11.1\doxia-sink-api-1.11.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.11.1\doxia-logging-api-1.11.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.11.1\doxia-site-renderer-1.11.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\doxia\doxia-core\1.11.1\doxia-core-1.11.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.11.1\doxia-decoration-model-1.11.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\doxia\doxia-skin-model\1.11.1\doxia-skin-model-1.11.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.11.1\doxia-module-xhtml-1.11.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml5\1.11.1\doxia-module-xhtml5-1.11.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-10\plexus-i18n-1.0-beta-10.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-30\plexus-container-default-1.0-alpha-30.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-velocity\1.2\plexus-velocity-1.2.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\csc-sp-0000456\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\csc-sp-0000456\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\csc-sp-0000456\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\csc-sp-0000456\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\csc-sp-0000456\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\csc-sp-0000456\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\csc-sp-0000456\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\maven\wagon\wagon-provider-api\2.4\wagon-provider-api-2.4.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\commons\commons-text\1.9\commons-text-1.9.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\csc-sp-0000456\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\csc-sp-0000456\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\csc-sp-0000456\.m2\repository\com\thoughtworks\qdox\qdox\2.0.1\qdox-2.0.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-java\1.1.0\plexus-java-1.1.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\ow2\asm\asm\9.2\asm-9.2.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-utils\3.4.2\plexus-utils-3.4.2.jar;C:\Users\csc-sp-0000456\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\plexus\plexus-interactivity-api\1.1\plexus-interactivity-api-1.1.jar;C:\Users\csc-sp-0000456\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\csc-sp-0000456\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\csc-sp-0000456\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\csc-sp-0000456\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-java\4.10.0\selenium-java-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\4.10.0\selenium-chrome-driver-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-chromium-driver\4.10.0\selenium-chromium-driver-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v112\4.10.0\selenium-devtools-v112-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v113\4.10.0\selenium-devtools-v113-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v114\4.10.0\selenium-devtools-v114-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v85\4.10.0\selenium-devtools-v85-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\4.10.0\selenium-edge-driver-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\4.10.0\selenium-firefox-driver-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\4.10.0\selenium-ie-driver-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\4.10.0\selenium-safari-driver-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-support\4.10.0\selenium-support-4.10.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-server\3.141.59\selenium-server-3.141.59.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar;C:\Users\csc-sp-0000456\.m2\repository\com\beust\jcommander\1.72\jcommander-1.72.jar;C:\Users\csc-sp-0000456\.m2\repository\net\bytebuddy\byte-buddy\1.8.15\byte-buddy-1.8.15.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\csc-sp-0000456\.m2\repository\com\google\guava\guava\25.0-jre\guava-25.0-jre.jar;C:\Users\csc-sp-0000456\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\csc-sp-0000456\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\csc-sp-0000456\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\csc-sp-0000456\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\csc-sp-0000456\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\csc-sp-0000456\.m2\repository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\seleniumhq\selenium\jetty-repacked\9.4.12.v20180830\jetty-repacked-9.4.12.v20180830.jar;C:\Users\csc-sp-0000456\.m2\repository\com\squareup\okhttp3\okhttp\3.11.0\okhttp-3.11.0.jar;C:\Users\csc-sp-0000456\.m2\repository\com\squareup\okio\okio\1.14.0\okio-1.14.0.jar;C:\Users\csc-sp-0000456\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;C:\Users\csc-sp-0000456\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.0\junit-jupiter-api-5.11.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\junit\platform\junit-platform-commons\1.11.0\junit-platform-commons-1.11.0.jar;C:\Users\csc-sp-0000456\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\csc-sp-0000456\.m2\repository\org\jetbrains\annotations\15.0\annotations-15.0.jar com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.csc.sap.Main
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
	    ______    __            _   __                            
	   / ____/   / /  ____ _   / | / /  (^_^) __  __   ____ ___  
	  / /_      / /  / __ `/  /  |/ /   / /  / / / /  / __ `__ \ 
	 / __/     / /  / /_/ /  / /|  /   / /  / /_/ /  / / / / / / 
	/_/       /_/   \__,_/  /_/ |_/   /_/   \__,_/  /_/ /_/ /_/  
	============================================================
						    Version: 2.3.2.0


Starting Windows Desktop Driver on port 9999

18:13:19 [ERROR] SocketException occurred while trying to start listner: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
18:13:19 [FATAL] Failed to start driver: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)

Unhandled Exception: System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)
   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)
   at FlaNium.Desktop.Driver.Program.Main(String[] args)

org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 408. Message: [FlaNium ERROR]: Response timed out!!! 
Host info: host: 'CR-S-DXDH302', ip: '10.27.241.105'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: FlaNium.WinAPI.webdriver.FlaNiumDriver
Command: [null, newSession {capabilities=[Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}]}]
Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}

	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
	at FlaNium.WinAPI.webdriver.FlaNiumDriverCommandExecutor.execute(FlaNiumDriverCommandExecutor.java:654)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
	at FlaNium.WinAPI.webdriver.FlaNiumDriver.<init>(FlaNiumDriver.java:36)
	at org.csc.sap.Driver.<init>(Driver.java:57)
	at org.csc.sap.Main.<init>(Main.java:27)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

	    ______    __            _   __                            
	   / ____/   / /  ____ _   / | / /  (^_^) __  __   ____ ___  
	  / /_      / /  / __ `/  /  |/ /   / /  / / / /  / __ `__ \ 
	 / __/     / /  / /_/ /  / /|  /   / /  / /_/ /  / / / / / / 
	/_/       /_/   \__,_/  /_/ |_/   /_/   \__,_/  /_/ /_/ /_/  
	============================================================
						    Version: 2.3.2.0


Starting Windows Desktop Driver on port 9999

18:13:29 [ERROR] SocketException occurred while trying to start listner: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
18:13:29 [FATAL] Failed to start driver: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)

Unhandled Exception: System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)
   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)
   at FlaNium.Desktop.Driver.Program.Main(String[] args)

org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 408. Message: [FlaNium ERROR]: Response timed out!!! 
Host info: host: 'CR-S-DXDH302', ip: '10.27.241.105'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: FlaNium.WinAPI.webdriver.FlaNiumDriver
Command: [null, newSession {capabilities=[Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}]}]
Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}

	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
	at FlaNium.WinAPI.webdriver.FlaNiumDriverCommandExecutor.execute(FlaNiumDriverCommandExecutor.java:654)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
	at FlaNium.WinAPI.webdriver.FlaNiumDriver.<init>(FlaNiumDriver.java:36)
	at org.csc.sap.Driver.<init>(Driver.java:57)
	at org.csc.sap.Main.<init>(Main.java:27)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

	    ______    __            _   __                            
	   / ____/   / /  ____ _   / | / /  (^_^) __  __   ____ ___  
	  / /_      / /  / __ `/  /  |/ /   / /  / / / /  / __ `__ \ 
	 / __/     / /  / /_/ /  / /|  /   / /  / /_/ /  / / / / / / 
	/_/       /_/   \__,_/  /_/ |_/   /_/   \__,_/  /_/ /_/ /_/  
	============================================================
						    Version: 2.3.2.0


Starting Windows Desktop Driver on port 9999

18:13:40 [ERROR] SocketException occurred while trying to start listner: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
18:13:40 [FATAL] Failed to start driver: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)

Unhandled Exception: System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)
   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)
   at FlaNium.Desktop.Driver.Program.Main(String[] args)

org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 408. Message: [FlaNium ERROR]: Response timed out!!! 
Host info: host: 'CR-S-DXDH302', ip: '10.27.241.105'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: FlaNium.WinAPI.webdriver.FlaNiumDriver
Command: [null, newSession {capabilities=[Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}]}]
Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}

	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
	at FlaNium.WinAPI.webdriver.FlaNiumDriverCommandExecutor.execute(FlaNiumDriverCommandExecutor.java:654)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
	at FlaNium.WinAPI.webdriver.FlaNiumDriver.<init>(FlaNiumDriver.java:36)
	at org.csc.sap.Driver.<init>(Driver.java:57)
	at org.csc.sap.Main.<init>(Main.java:27)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

	    ______    __            _   __                            
	   / ____/   / /  ____ _   / | / /  (^_^) __  __   ____ ___  
	  / /_      / /  / __ `/  /  |/ /   / /  / / / /  / __ `__ \ 
	 / __/     / /  / /_/ /  / /|  /   / /  / /_/ /  / / / / / / 
	/_/       /_/   \__,_/  /_/ |_/   /_/   \__,_/  /_/ /_/ /_/  
	============================================================
						    Version: 2.3.2.0


Starting Windows Desktop Driver on port 9999

18:13:50 [ERROR] SocketException occurred while trying to start listner: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
18:13:50 [FATAL] Failed to start driver: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)

Unhandled Exception: System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)
   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)
   at FlaNium.Desktop.Driver.Program.Main(String[] args)

org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 408. Message: [FlaNium ERROR]: Response timed out!!! 
Host info: host: 'CR-S-DXDH302', ip: '10.27.241.105'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: FlaNium.WinAPI.webdriver.FlaNiumDriver
Command: [null, newSession {capabilities=[Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}]}]
Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}

	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
	at FlaNium.WinAPI.webdriver.FlaNiumDriverCommandExecutor.execute(FlaNiumDriverCommandExecutor.java:654)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
	at FlaNium.WinAPI.webdriver.FlaNiumDriver.<init>(FlaNiumDriver.java:36)
	at org.csc.sap.Driver.<init>(Driver.java:57)
	at org.csc.sap.Main.<init>(Main.java:27)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

	    ______    __            _   __                            
	   / ____/   / /  ____ _   / | / /  (^_^) __  __   ____ ___  
	  / /_      / /  / __ `/  /  |/ /   / /  / / / /  / __ `__ \ 
	 / __/     / /  / /_/ /  / /|  /   / /  / /_/ /  / / / / / / 
	/_/       /_/   \__,_/  /_/ |_/   /_/   \__,_/  /_/ /_/ /_/  
	============================================================
						    Version: 2.3.2.0


Starting Windows Desktop Driver on port 9999

18:14:00 [ERROR] SocketException occurred while trying to start listner: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
18:14:00 [FATAL] Failed to start driver: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)

Unhandled Exception: System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)
   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)
   at FlaNium.Desktop.Driver.Program.Main(String[] args)

org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 408. Message: [FlaNium ERROR]: Response timed out!!! 
Host info: host: 'CR-S-DXDH302', ip: '10.27.241.105'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: FlaNium.WinAPI.webdriver.FlaNiumDriver
Command: [null, newSession {capabilities=[Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}]}]
Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}

	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
	at FlaNium.WinAPI.webdriver.FlaNiumDriverCommandExecutor.execute(FlaNiumDriverCommandExecutor.java:654)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
	at FlaNium.WinAPI.webdriver.FlaNiumDriver.<init>(FlaNiumDriver.java:36)
	at org.csc.sap.Driver.<init>(Driver.java:57)
	at org.csc.sap.Main.<init>(Main.java:27)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

	    ______    __            _   __                            
	   / ____/   / /  ____ _   / | / /  (^_^) __  __   ____ ___  
	  / /_      / /  / __ `/  /  |/ /   / /  / / / /  / __ `__ \ 
	 / __/     / /  / /_/ /  / /|  /   / /  / /_/ /  / / / / / / 
	/_/       /_/   \__,_/  /_/ |_/   /_/   \__,_/  /_/ /_/ /_/  
	============================================================
						    Version: 2.3.2.0


Starting Windows Desktop Driver on port 9999

18:14:10 [ERROR] SocketException occurred while trying to start listner: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
18:14:10 [FATAL] Failed to start driver: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)

Unhandled Exception: System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)
   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)
   at FlaNium.Desktop.Driver.Program.Main(String[] args)

org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 408. Message: [FlaNium ERROR]: Response timed out!!! 
Host info: host: 'CR-S-DXDH302', ip: '10.27.241.105'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: FlaNium.WinAPI.webdriver.FlaNiumDriver
Command: [null, newSession {capabilities=[Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}]}]
Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}

	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
	at FlaNium.WinAPI.webdriver.FlaNiumDriverCommandExecutor.execute(FlaNiumDriverCommandExecutor.java:654)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
	at FlaNium.WinAPI.webdriver.FlaNiumDriver.<init>(FlaNiumDriver.java:36)
	at org.csc.sap.Driver.<init>(Driver.java:57)
	at org.csc.sap.Main.<init>(Main.java:27)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

	    ______    __            _   __                            
	   / ____/   / /  ____ _   / | / /  (^_^) __  __   ____ ___  
	  / /_      / /  / __ `/  /  |/ /   / /  / / / /  / __ `__ \ 
	 / __/     / /  / /_/ /  / /|  /   / /  / /_/ /  / / / / / / 
	/_/       /_/   \__,_/  /_/ |_/   /_/   \__,_/  /_/ /_/ /_/  
	============================================================
						    Version: 2.3.2.0


Starting Windows Desktop Driver on port 9999

18:14:20 [ERROR] SocketException occurred while trying to start listner: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
18:14:20 [FATAL] Failed to start driver: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)

Unhandled Exception: System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)
   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)
   at FlaNium.Desktop.Driver.Program.Main(String[] args)

org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 408. Message: [FlaNium ERROR]: Response timed out!!! 
Host info: host: 'CR-S-DXDH302', ip: '10.27.241.105'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: FlaNium.WinAPI.webdriver.FlaNiumDriver
Command: [null, newSession {capabilities=[Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}]}]
Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}

	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
	at FlaNium.WinAPI.webdriver.FlaNiumDriverCommandExecutor.execute(FlaNiumDriverCommandExecutor.java:654)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
	at FlaNium.WinAPI.webdriver.FlaNiumDriver.<init>(FlaNiumDriver.java:36)
	at org.csc.sap.Driver.<init>(Driver.java:57)
	at org.csc.sap.Main.<init>(Main.java:27)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

	    ______    __            _   __                            
	   / ____/   / /  ____ _   / | / /  (^_^) __  __   ____ ___  
	  / /_      / /  / __ `/  /  |/ /   / /  / / / /  / __ `__ \ 
	 / __/     / /  / /_/ /  / /|  /   / /  / /_/ /  / / / / / / 
	/_/       /_/   \__,_/  /_/ |_/   /_/   \__,_/  /_/ /_/ /_/  
	============================================================
						    Version: 2.3.2.0


Starting Windows Desktop Driver on port 9999

18:14:30 [ERROR] SocketException occurred while trying to start listner: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
18:14:30 [FATAL] Failed to start driver: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)

Unhandled Exception: System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)
   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)
   at FlaNium.Desktop.Driver.Program.Main(String[] args)

org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 408. Message: [FlaNium ERROR]: Response timed out!!! 
Host info: host: 'CR-S-DXDH302', ip: '10.27.241.105'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: FlaNium.WinAPI.webdriver.FlaNiumDriver
Command: [null, newSession {capabilities=[Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}]}]
Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}

	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
	at FlaNium.WinAPI.webdriver.FlaNiumDriverCommandExecutor.execute(FlaNiumDriverCommandExecutor.java:654)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
	at FlaNium.WinAPI.webdriver.FlaNiumDriver.<init>(FlaNiumDriver.java:36)
	at org.csc.sap.Driver.<init>(Driver.java:57)
	at org.csc.sap.Main.<init>(Main.java:27)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

	    ______    __            _   __                            
	   / ____/   / /  ____ _   / | / /  (^_^) __  __   ____ ___  
	  / /_      / /  / __ `/  /  |/ /   / /  / / / /  / __ `__ \ 
	 / __/     / /  / /_/ /  / /|  /   / /  / /_/ /  / / / / / / 
	/_/       /_/   \__,_/  /_/ |_/   /_/   \__,_/  /_/ /_/ /_/  
	============================================================
						    Version: 2.3.2.0


Starting Windows Desktop Driver on port 9999

18:14:40 [ERROR] SocketException occurred while trying to start listner: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
18:14:40 [FATAL] Failed to start driver: System.Net.Sockets.SocketException (0x80004005): Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)

Unhandled Exception: System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at System.Net.Sockets.TcpListener.Start(Int32 backlog)
   at System.Net.Sockets.TcpListener.Start()
   at FlaNium.Desktop.Driver.Listener.StartListening()
   at FlaNium.Desktop.Driver.Program.Run(CommandLineOptions options)
   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)
   at FlaNium.Desktop.Driver.Program.Main(String[] args)

org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 408. Message: [FlaNium ERROR]: Response timed out!!! 
Host info: host: 'CR-S-DXDH302', ip: '10.27.241.105'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: FlaNium.WinAPI.webdriver.FlaNiumDriver
Command: [null, newSession {capabilities=[Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}]}]
Capabilities {flanium:capabilities: {app: C:\Program Files (x86)\SAP\..., args: Windows-PC, connectToRunningApp: true, injectionActivate: true, launchDelay: 4000, processFindTimeOut: 9999, processName: saplogon.exe, responseTimeout: 10000}}

	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
	at FlaNium.WinAPI.webdriver.FlaNiumDriverCommandExecutor.execute(FlaNiumDriverCommandExecutor.java:654)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
	at FlaNium.WinAPI.webdriver.FlaNiumDriver.<init>(FlaNiumDriver.java:36)
	at org.csc.sap.Driver.<init>(Driver.java:57)
	at org.csc.sap.Main.<init>(Main.java:27)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)


Process finished with exit code -1
